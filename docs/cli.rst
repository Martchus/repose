######################
Command Line Interface
######################

.. contents::
  :depth: 4

Introduction
============

The REPOSE command line is realized with python argparse module to be similiar
with MTUI and close but not same as old ``repose-0.2*.*``

Command line has few global options and bunch of commands with own options.

For global options and also for commands is avivable ``--help`` option.


Common Argument Types
=====================


.. option:: -t HOST, --target HOST


  Address of the target host (should be the FQDN).
  
  In most cases ``-t`` is an required argument; can be used multiple times.

  Can be ``user@fqdn:port``, ``fqdn:port``, ``user@fqdn``, ``fqdn`` or simply 
  ip addres, hostname.

  By default it uses ``root`` as user and ``22`` as port. User must have **root**
  privilegies on refhost.

.. option:: REPA

**Repository patterns** accepted by **repose** :

 |
 | [**P**][:[**V**][:[**A**][:[**T**]]]]

 Empty segments are treated as wildcards or default to information gleaned from */etc/products.d/baseproduct*, depending on context. Some useful variants:

 |
 | .  **P**
 | ·  **P**:**V**:**A**:**T**
 | ·  **P**:**V**:**A**
 | ·  **P**:**V**
 | ·  **P**:**V**::**T**
 | ·  **P**:::**T**
 | ·  :::**T**

**P** is product name as is in product file

**V** version

**A** architecture

**T** repo type as defined in ``products.yml``, for example ``pool``, ``update`` or ``ltss``

Global Options
==============


All global options are optional.

.. option:: -h, --help
  
  Simply help generated by argparse

.. option:: -n,  --print

  Print commands for HOST instead running on HOST

.. option:: -d, --debug
  
  Debug mode, is mutualy exclusive with ``-q``

.. option:: -q, --quiet
  
  Suppres messages from repose, only errors / warnings will show.
  Mutualy exclusive with ``-d``

.. option:: -V, --version

  Suprisingly prints version information

.. option:: -c CONFIG,  --config CONFIG

  Path for config yaml file. Is optional and by default points to **/etc/repose/products.yml**


Commands
========

known_products
--------------

::
  
  known_products

List all known products by repose, defined in products.yml


add
---

::
  
  add [-h] -t HOST REPA [REPA ...]

Add repository to HOST specified by REPA


remove
------

::
  
  remove [-h] -t HOST REPA [REPA ...]

Remove repositories from HOST specified by REPA


reset
-----

::
  
  reset [-h] -t HOST

Reset HOST repositories to default state based on products installed on host.
It has always two phases - clear all repositories from HOST and readd all valid
repositories according to installed products


clear
-----

::
  
  clear [-h] -t HOST

Clear all repositories from HOST


install
-------

::
  
  install [-h] -t HOST REPA [REPA ...]

Add repositories and install products from  HOST corresponding to REPA


uninstall
---------

::
  
  uninstall [-h] -t HOST REPA [REPA ...]

Remove repositories and uninstall product from HOST corresponding to REPA


list-products
-------------

::
  
  list-products [-h] -t HOST

Show installed products on HOST


list-repos
----------

::
  
  list-repos [-h] -t HOST

Show repositories on HOST
